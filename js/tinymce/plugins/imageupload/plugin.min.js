tinymce.PluginManager.add('imageupload', function(editor, url) {

	// Add the custom button
	editor.addButton('imageupload', {
		tooltip: 'Upload an image / PDF',
		icon : 'image',
		text: 'Upload File',
		onclick: function() {
			editor.windowManager.open({
			title: 'Upload an image / PDF',
			//change this route to the one that returns the '_image-dialog.blade.php' file as a view
			file : site +'safety-manual/upload-image',
			width : 360,
			height: 50,
			buttons: [
			{
				text: 'Close',
				onclick: 'close'
			}]
			});
		}
	});

	// Eventually something like this could be used to re-upload edited images back to the server!
	// http://www.tinymce.com/wiki.php/Handling_Asynchronous_Image_Uploads
	// http://www.tinymce.com/wiki.php/PHP_Upload_Handler
	// http://www.tinymce.com/wiki.php/api4:class.tinymce.Editor

	/*editor.on('submit', function(e) {
	            editor.uploadImages(function(success) {
	                $.post(site +'safety-manual/upload-image', tinymce.activeEditor.getContent()).done(function() {
	                    var ImageUpload = {
	                    	inProgress : function() {
	                    		document.getElementById("upload_form").innerHTML = '<br><p>Uploading Image...</p>';
	                    	},
	                    	uploadSuccess : function(result) {
	                    		document.getElementById("image_preview").style.display = 'block';
	                    		document.getElementById("upload_form").innerHTML = '<br><p>Upload Success!</p>';
	                    		parent.tinymce.EditorManager.activeEditor.insertContent('<img src="' + result.code +'">');
	                    	}

	                    };
	                });
	            });
	        });*/

	editor
});